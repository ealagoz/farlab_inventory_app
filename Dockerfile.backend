# ---- Builder: compile wheels, isolate build tools ----
FROM python:3.12.8-slim-bookworm AS builder

# System build deps only in this stage
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app
COPY farlab-inventory-backend/requirements.txt .

# Upgrade pip and build wheels for all dependencies
RUN python -m pip install --upgrade pip \
 && pip wheel --no-cache-dir --wheel-dir /wheels -r requirements.txt

# ---- Runtime: minimal deps, no compilers ----
FROM python:3.12.8-slim-bookworm

# Install minimal runtime libraries (if your app needs PostgreSQL)
RUN apt-get update && apt-get install -y --no-install-recommends \
    libpq5 \
    && rm -rf /var/lib/apt/lists/*

# Create unprivileged user with nologin shell
RUN groupadd -r appuser && useradd -r -g appuser -d /app -s /usr/sbin/nologin appuser

# Create writable log directory
RUN mkdir -p /tmp/logs && chown -R appuser:appuser /tmp/logs

# Install prebuilt wheels from the builder stage
WORKDIR /app
COPY --from=builder /wheels /wheels
COPY --from=builder /app/requirements.txt .
RUN python -m pip install --no-cache-dir --upgrade pip \
 && pip install --no-cache-dir --no-index --find-links=/wheels -r requirements.txt \
 && pip cache purge \
 && rm -rf /wheels requirements.txt

# Copy app code
COPY --chown=appuser:appuser farlab-inventory-backend/ .

# Ensure appuser owns the app directory
RUN chown -R appuser:appuser /app

# Switch to non-root
USER appuser

EXPOSE 8000

# Healthcheck via Python stdlib (no curl in final image)
# Replace the problematic healthcheck with:
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD python -c "import urllib.request; urllib.request.urlopen('http://127.0.0.1:8000/health', timeout=5)" || exit 1

CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]